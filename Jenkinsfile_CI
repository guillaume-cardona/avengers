pipeline {
  environment {
    registry = "mccains/avengers"
    registryCredential = 'dockerhub'
    dockerImage = ''
  }
  agent any
  stages {
    stage('Cloning Git') {
      steps {
        git 'https://github.com/Mc-Cainss/avengers.git'
      }
    }
    stage('Maven Build') {
      steps {
          script{
        def mvnHome = tool 'apache-maven'
        withEnv(["MVN_HOME=$mvnHome"]) {
         if (isUnix()) {
            sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
         } else {
            bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
         }
      }
          }
    }
    }
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
    }
    stage('Deploy Image') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push('latest')
          }
        }
      }
    }
    
    stage('Send remote pipeline') {
      steps{
        script {
          build job: 'CD-PIPELINE', propagate: true, wait: false
          }
        }
      }
    }
    

}
